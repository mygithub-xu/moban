<template>
#set($http="$http")
#set($message="$message")
#set($utils="$utils")

    <div class="app-container">
        <!-- 查询区域 -->
        <el-scrollbar style="width:100%">
        <div class="container-query">
        #foreach ($item in $queryList)
        #if($!item.type ==  '1')
            <queryItem label="$!{item.title}：">
                <el-input v-model="queryContion.$!{item.fieldNameHump}" placeholder="请输入$!{item.title}"></el-input>
            </queryItem>
        #end
        #if($!item.type ==  '2')
            <queryItem label="$!{item.title}：">
                <el-select v-model="queryContion.$!{item.fieldNameHump}" placeholder="请选择"  clearable>
                  <el-option
                    v-for="item in selectData.$!{item.fieldNameHump}List"
                    :key="item.value"
                    :label="item.label"
                    :value="item.value"
                  ></el-option>
                </el-select>
            </queryItem>
        #end
        #if($!item.type ==  '3')
            <queryItem  label="$!{item.title}：" style="width:50%">
                <div class="is_data">
                  <el-date-picker
                    v-model="queryContion.$!{item.fieldNameHump}From"
                    type="date"
                    placeholder="选择日期">
                  </el-date-picker>
                  <span style="margin: 0 10px;line-height: 36px;"> 至 </span>
                  <el-date-picker
                    v-model="queryContion.$!{item.fieldNameHump}To"
                    type="date"
                    placeholder="选择日期">
                  </el-date-picker>
                </div>
            </queryItem>
        #end
        #end
            <query-item isButton style="width:100%;padding-left:30px">
            #foreach ($item in $queryList)
            #if($item.type ==  '4')
                #if($item.value ==  '1')
                <el-button type="primary"  @click="search" >$!{item.title}</el-button>
                #elseif($item.value ==  '2')
                <el-button  plain @click="reset" >$!{item.title}</el-button>
                #elseif($item.value ==  '3')
                <el-button  plain @click="handleDeleteBatch" type="danger">$!{item.title}</el-button>
                #elseif($item.value ==  '4')
                <el-button  plain @click="handleAdd" >$!{item.title}</el-button>
                #else
                <el-button  plain >$!{item.title}</el-button>
                #end
            #end
            #end
            </query-item>
        </div>
        <!-- 数据表格 -->
        <div class="container-table">
            <div class="common-table-style">
                <el-table :data="pageData.list" border
                #if($autoParam.showCheckTable ==  '1')
                 @selection-change="handleSelectionChange"
                #end
                >
                    #if($autoParam.showCheckTable ==  '1')
                    <el-table-column type="selection"></el-table-column>
                    #end
                    <el-table-column type="index" width="50" label="序号"></el-table-column>
                    #foreach ($item in $tableList)
                    <el-table-column prop="$!{item.fieldNameHump}"  label="$!{item.title}">
                    #if($item.isSelect == '1')
                          <template slot-scope="scope">
                            <template v-for="item in selectData.$!{item.fieldNameHump}List" >
                              <span :key="item.value" v-if="scope.row.userId == item.value">{{item.label}}</span>
                            </template>
                          </template>
                    #end
                    </el-table-column>
                    #end
                    #if($autoParam.showOperaTable ==  '1')
                    <el-table-column  label="操作">
                      <template slot-scope="scope">
                        #foreach ($item in $tableButtonList)
                            #if($item.value ==  '1')
                            <el-button @click="handleEdit(scope.row)" type="text">$!{item.title}</el-button>
                            #elseif($item.value ==  '2')
                            <el-button @click="handleDelete(scope.row)" type="text" style="color:red">$!{item.title}</el-button>
                            #else
                            <el-button type="text" >$!{item.title}</el-button>
                            #end
                        #end
                      </template>
                    </el-table-column>
                    #end
                  </el-table>
            </div>
            #if($autoParam.showPage ==  '1')
            <div class="pagination">
              <pagination :page-list="pageData" @pagesearch="handlePage"></pagination>
            </div>
            #end
        </div>
        <$!{projModel.tableName}Edit ref="$!{projModel.tableName}Edit" @back="getData" :selectData="selectData"></$!{projModel.tableName}Edit>
        </el-scrollbar>
    </div>
</template>
<script>
import $!{projModel.tableName}Edit from "./edit"
export default {
    components: { $!{projModel.tableName}Edit },
    name: "$!{projModel.tableName}Query",
    data() {
      return {
        // 数据
        pageData: {
          list: [],
          pageNumber: 1,
          pageSize: 10,
          totalCount: 0,
          totalPage: 0
        },
        // 查询
        queryContion: {
        #foreach ($item in $queryList)
        #if($item.fieldNameHump)
          $!{item.fieldNameHump}:"",
        #end
        #end
        },
        //下拉框数据
        selectData: {
        #foreach ($item in $autoFieldList)
        #if($item.dicId||$item.fieldIsBeRelated == '1')
          $!{item.fieldNameHump}List:[],
        #end
        #end
        },
        #if($autoParam.showCheckTable == '1')
        //批量删除
        delVal:""
        #end
      }
    },
    created() {
      //获取下拉框数据
      this.getDropData()
      //获取表格数据
      this.getData()
    },
    methods:{
        //获取下拉框数据
        getDropData(){
            #foreach ($item in $autoFieldList)
            #if($item.dicId)
                this.${http}.get(this.api.dicTypeGetType + "$!{item.dicType}").then(res => {
                    this.selectData.$!{item.fieldNameHump}List = res.data.body
                })
            #end
            #if($item.fieldIsBeRelated == '1')
                this.${http}.post("$!{item.apiUrl}/query",{
                       condition: {},
                       number: 1,
                       size: 999
                   }).then(res => {
                  this.selectData.$!{item.fieldNameHump}List = res.data.body.records.map(item => ({
                     label: item.$!{item.fieldRelatedFieldShowHump},
                     value: item.$!{item.fieldRelatedFieldHump}
                   }))
                });
            #end
            #end
        },
        // 清空
        empty(){
            this.queryContion = {
                #foreach ($item in $queryList)
                #if($item.fieldNameHump)
                $!{item.fieldNameHump}:"",
                #end
                #end
            }
        },
        //获取数据
        getData(){
            let queryContion = {
                condition: this.queryContion,
                number: this.pageData.pageNumber,
                size: this.pageData.pageSize
            }
            this.${http}.post("api/$!{projModel.projectName}/$!{projModel.tableName}/query",queryContion)
            .then(res => {
              this.pageData.list = res.data.body.records;
              this.pageData.totalCount = res.data.body.total;
              this.pageData.totalPage = res.data.body.pages;
            })
        },

        // 查询
        search(){
            this.getData()
        },
        // 重置
        reset(){
            this.empty()
            this.getData()
        },
        #if($!autoParam.showPage ==  '1')
        //分页查询
        handlePage(number, size){
            this.pageData.pageNumber = number
            this.pageData.pageSize = size
            this.getData()
        },
        #end

        #foreach ($item in $tableButtonList)
        #if($item.value ==  '2')
        //删除
        handleDelete(row){
          this.$confirm("此操作将永久删除, 是否继续?", "提示", {
            confirmButtonText: "确定",
            cancelButtonText: "取消",
            type: "warning"
          }).then(() =>
          {
              this.${http}.delete("api/$!{projModel.projectName}/$!{projModel.tableName}/deleteById/" + row.id)
              .then(res => {
                if(res.data.code == '200'){
                  this.${message}.success(res.data.message)
                  this.getData()
                }
              })
          })
        },
        #end
        #if($item.value ==  '1')
        //编辑
        handleEdit(row) {
          this.$refs.$!{projModel.tableName}Edit.openByEdit(row)
        },
        #end
        #end

        #foreach ($item in $queryList)
        #if($item.value ==  '4')
        //新增
        handleAdd() {
          this.$refs.$!{projModel.tableName}Edit.openByNew()
        },
        #end
        #if($item.value ==  '3')
        handleDeleteBatch(){
          this.$confirm("此操作将永久删除, 是否继续?", "提示", {
            confirmButtonText: "确定",
            cancelButtonText: "取消",
            type: "warning"
          })
          .then(() => {
            let deletebatch = this.${utils}.findIds(this.delVal)
            this.${http}.post("api/$!{projModel.projectName}/$!{projModel.tableName}/batchDelete",deletebatch)
            .then(res => {
              if(res.data.code == '200'){
                this.${message}.success(res.data.message)
                this.getData()
              }
            })
          })
        },
        #end
        #end
        #if($autoParam.showCheckTable ==  '1')
        //勾选
        handleSelectionChange(val){
          this.delVal = val
        }
        #end
    }
}
</script>