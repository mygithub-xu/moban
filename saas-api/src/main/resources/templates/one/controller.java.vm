package $!{projModel.packageName}.module.$!{projModel.projectName}.$!{projModel.tableName}.controller;

import $!{projModel.packageName}.module.$!{projModel.projectName}.$!{projModel.tableName}.entity.$!{projModel._TableName};
import $!{projModel.packageName}.module.$!{projModel.projectName}.$!{projModel.tableName}.service.I$!{projModel._TableName}Service;
import $!{projModel.packageName}.utils.Parameter.QueryEntity;
import $!{projModel.packageName}.utils.Result;
import $!{projModel.packageName}.utils.common.StringUtils;
import $!{projModel.packageName}.exception.ParamIsNullException;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

/**
 * <p>
 *  前端控制器
 * </p>
 *
 * @author xu
 * @since
 */
@RestController
@RequestMapping("/api/$!{projModel.projectName}/$!{projModel.tableName}")
@CrossOrigin
public class $!{projModel._TableName}Controller {

        @Autowired
        I$!{projModel._TableName}Service doService;

        @ApiOperation("保存或者更新")
        @PostMapping("/saveOrUpdate")
        public Result saveOrUpdate(@RequestBody $!{projModel._TableName} $!{projModel.tableName}) {
                if(StringUtils.isBlank($!{projModel.tableName})){
                        throw new ParamIsNullException();
                }
                return  doService.saveOrUpdateCommon($!{projModel.tableName});
        }

        @ApiOperation("删除（物理删除）")
        @DeleteMapping("/deleteById/{id}")
        public Result delete(@PathVariable String id) {

                return doService.delete(id);
        }

        @ApiOperation("查询")
        @PostMapping("/query")
        public Result query(@RequestBody QueryEntity<$!{projModel._TableName}> parameter) {
                if(StringUtils.isBlank(parameter)){
                        throw new ParamIsNullException();
                }
                return  doService.query(parameter);
        }

        @ApiOperation("查询")
        @GetMapping("/queryById/{id}")
        public Result query(@PathVariable String id) {
                return  doService.query(id);
        }

        @ApiOperation("批量删除（物理删除）")
        @PostMapping("/batchDelete")
        public Result batchDelete(@RequestBody List<String> ids) {

                return doService.deleteBatch(ids);
        }
}

